import java.util.Objects;import java.util.Random;import java.util.Scanner;public class Game {    private final Hive hive;    private final Scanner scanner;    private final Random r;    public Game() {        this.hive = new Hive();        this.scanner = new Scanner(System.in);        this.r = new Random();        populateHive();        startGame();    }    public void startGame(){        System.out.println("Welcome to The Wasp Game!\nPress 1 to play or 2 to exit");        playGame(Integer.parseInt(scanner.nextLine()));    }    public void leaveGame(){        System.out.println("Leaving the game!");        System.exit(0);    }    public void incorrectInput(){        System.out.println("Incorrect input, please try again!");        startGame();    }    public void playGame(int choice){        if (choice == 1){            System.out.println("Awesome! Press 1 to attack the hive or 2 to leave the game!");            switch(scanner.nextInt()){                case 1:                    attackHive();                    playGame(1);                    break;                case 2:                    leaveGame();                    break;                default:                    incorrectInput();                    break;            }        } else if(choice == 2){            leaveGame();        } else if(Integer.toString(choice).isEmpty()){            incorrectInput();        } else{            incorrectInput();        }    }    public void populateHive(){        hive.getListOfWasps().add(new QueenWasp(hive.getListOfWasps().size()));        for (int i = 0; i < 5; i++) {            hive.getListOfWasps().add(new WorkerWasp(hive.getListOfWasps().size()));        }        for (int i = 0; i < 8 ; i++) {            hive.getListOfWasps().add(new DroneWasp(hive.getListOfWasps().size()));        }    }    public void attackHive(){        int randomInt = r.nextInt(hive.getListOfWasps().size());        for (Wasp wasp: hive.getListOfWasps()) {            if(wasp.getId() == randomInt && !wasp.waspIsDead()) {                System.out.println("Attacking a " + wasp.getType() + " wasp with id of "+wasp.getId());                switch (wasp.getType()) {                    case "Queen":                        wasp.setHealth(wasp.getHealth() - 7);                        break;                    case "Worker":                        wasp.setHealth(wasp.getHealth() - 10);                        break;                    case "Drone":                        wasp.setHealth(wasp.getHealth() - 12);                        break;                }                if(!wasp.waspIsDead()){                    System.out.println(wasp.getType() + " wasp has " + wasp.getHealth() + " health points remaining");                } else if (wasp.waspIsDead() & !Objects.equals(wasp.getType(), "Queen")) {                    System.out.println("You killed a " + wasp.getType() + " wasp");                    System.out.println("There are " + hive.getHiveCount() + " wasps remaining");                }            }        }        // Removing the wasp if it is dead! Could this be it's own method?        if(hive.getListOfWasps().get(randomInt).waspIsDead() && Objects.equals(hive.getListOfWasps().get(randomInt).getType(), "Queen")){            System.out.println("You killed the Queen! The game is now over!");            leaveGame();        } else if(hive.getListOfWasps().get(randomInt).waspIsDead() ){            hive.removeWaspFromHive(hive.getListOfWasps().get(randomInt));        }    }    public void printHive(){        for (Wasp wasp : hive.getListOfWasps()) {            System.out.println(wasp.toString());        }    }}